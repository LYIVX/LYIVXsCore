plugins {
    id 'maven-publish'
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modImplementation "com.teamresourceful.resourcefullib:resourcefullib-common-$rootProject.resourcefullib_version"
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"


    modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-common:${jei_version}")
    modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-lib:${jei_version}")
}

architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/LYIVXsCore.accesswidener")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java  // Only use components.java for publication
        }

        // Optional: You can create another publication for other components (like access widener or resources)
        // mavenAccessWidener(MavenPublication) {
        //     artifact(file("src/main/resources/LYIVXsCore.accesswidener"))
        // }
    }

    repositories {
        maven {
            url = uri("https://jitpack.io") // For JitPack
        }
    }
}